import arcade
import math
import random
import settings
import os

class Zombie(arcade.Sprite):
    # def __init__(self, x: int, y: int, x_speed: int = 0, y_speed: int = 0):
    #     self.x = x
    #     self.y = y
    #     self.x_speed = x_speed
    #     self.y_speed = y_speed
    #     self.radius = 25
    #     self.color = arcade.color.RED

    # def draw(self):
    #     arcade.draw_circle_filled(self.x, self.y, self.radius, self.color)

    def update(self):
        self.x += self.x_speed
        self.y += self.y_speed

        if self.x > settings.WIDTH or self.x < 0:
            self.x_speed = -self.x_speed

        if self.y > settings.HEIGHT or self.y < 0:
            self.y_speed = -self.y_speed

class Player(arcade.Sprite):
    def update(self):
        self.center_x += self.change_x
        self.center_y += self.change_y

        if self.left < 0:
            self.left = 0
        elif self.right > settings.WIDTH - 1:
            self.right = settings.WIDTH - 1

        if self.bottom < 0:
            self.bottom = 0
        elif self.top > settings.HEIGHT - 1:
            self.top = settings.HEIGHT - 1


class Chapter1View(arcade.View):
    def __init__(self):
        super().__init__()
        arcade.set_background_color(arcade.color.LIGHT_GREEN)

        self.time = 30.00

        self.player_list = arcade.SpriteList()
        self.player_sprite = Player("Images\player_right.png")
        self.player_sprite.center_x = 100
        self.player_sprite.center_y = 100
        self.player_list.append(self.player_sprite)

        self.zombies = arcade.SpriteList()
        self.zombie_texture = arcade.make_soft_square_texture(50, arcade.color.RED, outer_alpha=255)


        for i in range(3):
            zombie = arcade.Sprite()
            zombie_sprite = Zombie("Images\zombie_right.png")
            zombie.center_x = random.randrange(0, settings.WIDTH)
            zombie.center_y = random.randrange(settings.HEIGHT // 2, settings.HEIGHT)
            zombie.texture = self.zombie_texture
            self.zombies.append(zombie)

    def on_draw(self):
        arcade.start_render()
        # Draw in here...
        minutes = int(self.time) // 60
        seconds = int(self.time) % 60
        output = ("Time: {}: {}".format(minutes, seconds))
        arcade.draw_text(output, 300, 300,  arcade.color.BLACK, 24)
        self.player_list.draw()
        self.zombies.draw()

    def update(self, delta_time):
        self.time -= delta_time
        self.zombies.update()
        self.player_list.update()

        for s in self.zombies:
            player_in_contact = s.collides_with_list(self.player_list)
            if player_in_contact:
                print("HHHHHHHHHHHHHHHH")


    def on_key_press(self, key, modifiers):
        # self.director.next_view()
        if key == arcade.key.ESCAPE:
            pass
        if key == arcade.key.D:
            self.player_sprite.change_x = 5
        if key == arcade.key.A:
            self.player_sprite.change_x = -5
        if key == arcade.key.W:
            self.player_sprite.change_y = 5
        if key == arcade.key.S:
            self.player_sprite.change_y = -5

    def on_key_release(self, key, modifiers):
        if key == arcade.key.D or key == arcade.key.A:
            self.player_sprite.change_x = 0
        elif key == arcade.key.W or key == arcade.key.S:
            self.player_sprite.change_y = 0




if __name__ == "__main__":
    """This section of code will allow you to run your View
    independently from the main.py file and its Director.
    You can ignore this whole section. Keep it at the bottom
    of your code.
    It is advised you do not modify it unless you really know
    what you are doing.
    """
    from utils import FakeDirector
    window = arcade.Window(settings.WIDTH, settings.HEIGHT)
    my_view = Chapter1View()
    my_view.director = FakeDirector(close_on_next_view=True)
    window.show_view(my_view)
    arcade.run()
